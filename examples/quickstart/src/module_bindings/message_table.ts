// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

// @ts-ignore
import {
    AlgebraicType,
    ProductType,
    ProductTypeElement,
    SumType,
    SumTypeVariant,
    AlgebraicValue,
    Identity,
    Address,
    DBConnection,
    TableCache,
    BinaryWriter,
    BinaryReader,
} from "@clockworklabs/spacetimedb-sdk";
import { Message } from "./message_type";

// Table handle for the table `Message`.
//
// Obtain a handle from the [TODO] method on [`super::RemoteTables`],
// like `ctx.db.TODO()`.
//
// Users are encouraged not to explicitly reference this type,
// but to directly chain method calls,
// like `ctx.db.TODO().on_insert(...)`.
export class MessageTableHandle {
    tableCache: TableCache<Message>;

    constructor(tableCache: TableCache<Message>) {
        this.tableCache = tableCache;
    }

    count(): number {
        return this.tableCache.count();
    }

    iter(): Iterable<Message> {
        return this.tableCache().iter();
    }

    onInsert = (cb: (ctx: EventContext, value: Message) => void) => {
        return this.tableCache.onInsert<Message>(cb);
    }

    removeOnInsert = (cb: (ctx: EventContext, value: Message) => void) => {
        return this.tableCache.removeOnInsert<Message>(cb);
    }

    onDelete = (cb: (ctx: EventContext, value: Message) => void) => {
        return this.tableCache.onDelete<Message>(cb);
    }

    removeOnDelete = (cb: (ctx: EventContext, value: Message) => void) => {
        return this.tableCache.removeOnDelete<Message>(cb);
    }

}
