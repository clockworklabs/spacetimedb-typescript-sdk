// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

// @ts-ignore
import {
    AlgebraicType,
    ProductType,
    ProductTypeElement,
    SumType,
    SumTypeVariant,
    AlgebraicValue,
    Identity,
    Address,
    DBConnection,
    TableCache,
    BinaryWriter,
    BinaryReader,
} from "@clockworklabs/spacetimedb-sdk";


export type SendMessage = {
	text: string,
};

// A namespace for generated helper functions.
export namespace SendMessage {
	// A function which returns this type represented as an AlgebraicType.
	// This function is derived from the AlgebraicType used to generate this type.
	export function getAlgebraicType(): AlgebraicType {
		return AlgebraicType.createProductType([
			new ProductTypeElement("text", AlgebraicType.createStringType()),
		]);
	}

	export function serialize(writer: BinaryWriter, value: SendMessage): void {
	    SendMessage.getAlgebraicType().serialize(writer, value);
	}

	export function deserialize(reader: BinaryReader): SendMessage {
	    return SendMessage.getAlgebraicType().deserialize(reader);
	}
}

// Implements the serialization of the reducer arguments `send_message`.
export default (connection: DBConnection, args: SendMessage) => {
    const writer = new BinaryWriter(1024);
    SendMessage.serialize(writer, args);
    const argsBuffer = writer.getBuffer();
    connection.callReducer("send_message", argsBuffer);
}

