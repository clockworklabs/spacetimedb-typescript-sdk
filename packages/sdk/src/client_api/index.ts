// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

import {
  // @ts-ignore
  Address,
  // @ts-ignore
  AlgebraicType,
  // @ts-ignore
  AlgebraicValue,
  // @ts-ignore
  BinaryReader,
  // @ts-ignore
  BinaryWriter,
  // @ts-ignore
  DBConnectionBuilder,
  // @ts-ignore
  DBConnectionImpl,
  // @ts-ignore
  DBContext,
  // @ts-ignore
  Event,
  // @ts-ignore
  EventContextInterface,
  // @ts-ignore
  Identity,
  // @ts-ignore
  ProductType,
  // @ts-ignore
  ProductTypeElement,
  // @ts-ignore
  SumType,
  // @ts-ignore
  SumTypeVariant,
  // @ts-ignore
  TableCache,
} from '../index';

// Import and reexport all reducer arg types

// Import and reexport all table handle types

// Import and reexport all types
import { BsatnRowList } from './bsatn_row_list_type.ts';
export { BsatnRowList };
import { CallReducer } from './call_reducer_type.ts';
export { CallReducer };
import { ClientMessage } from './client_message_type.ts';
export { ClientMessage };
import { CompressableQueryUpdate } from './compressable_query_update_type.ts';
export { CompressableQueryUpdate };
import { DatabaseUpdate } from './database_update_type.ts';
export { DatabaseUpdate };
import { EnergyQuanta } from './energy_quanta_type.ts';
export { EnergyQuanta };
import { IdentityToken } from './identity_token_type.ts';
export { IdentityToken };
import { InitialSubscription } from './initial_subscription_type.ts';
export { InitialSubscription };
import { OneOffQuery } from './one_off_query_type.ts';
export { OneOffQuery };
import { OneOffQueryResponse } from './one_off_query_response_type.ts';
export { OneOffQueryResponse };
import { OneOffTable } from './one_off_table_type.ts';
export { OneOffTable };
import { QueryUpdate } from './query_update_type.ts';
export { QueryUpdate };
import { ReducerCallInfo } from './reducer_call_info_type.ts';
export { ReducerCallInfo };
import { RowSizeHint } from './row_size_hint_type.ts';
export { RowSizeHint };
import { ServerMessage } from './server_message_type.ts';
export { ServerMessage };
import { Subscribe } from './subscribe_type.ts';
export { Subscribe };
import { TableUpdate } from './table_update_type.ts';
export { TableUpdate };
import { Timestamp } from './timestamp_type.ts';
export { Timestamp };
import { TransactionUpdate } from './transaction_update_type.ts';
export { TransactionUpdate };
import { UpdateStatus } from './update_status_type.ts';
export { UpdateStatus };

const REMOTE_MODULE = {
  tables: {},
  reducers: {},
  // Constructors which are used by the DBConnectionImpl to
  // extract type information from the generated RemoteModule.
  eventContextConstructor: (imp: DBConnectionImpl, event: Event<Reducer>) => {
    return {
      ...(imp as DBConnection),
      event,
    };
  },
  dbViewConstructor: (imp: DBConnectionImpl) => {
    return new RemoteTables(imp);
  },
  reducersConstructor: (imp: DBConnectionImpl) => {
    return new RemoteReducers(imp);
  },
};

// A type representing all the possible variants of a reducer.
export type Reducer = never;

export class RemoteReducers {
  constructor(private connection: DBConnectionImpl) {}
}

export class RemoteTables {
  constructor(private connection: DBConnectionImpl) {}
}

export class DBConnection extends DBConnectionImpl<
  RemoteTables,
  RemoteReducers
> {
  static builder = (): DBConnectionBuilder<DBConnection> => {
    return new DBConnectionBuilder<DBConnection>(
      REMOTE_MODULE,
      (imp: DBConnectionImpl) => imp as DBConnection
    );
  };
}

export type EventContext = EventContextInterface<
  RemoteTables,
  RemoteReducers,
  Reducer
>;
