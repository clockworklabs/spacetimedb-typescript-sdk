// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

import {
  // @ts-ignore
  Address,
  // @ts-ignore
  AlgebraicType,
  // @ts-ignore
  AlgebraicValue,
  // @ts-ignore
  BinaryReader,
  // @ts-ignore
  BinaryWriter,
  // @ts-ignore
  DBConnectionBuilder,
  // @ts-ignore
  DBConnectionImpl,
  // @ts-ignore
  DBContext,
  // @ts-ignore
  Event,
  // @ts-ignore
  EventContextInterface,
  // @ts-ignore
  Identity,
  // @ts-ignore
  ProductType,
  // @ts-ignore
  ProductTypeElement,
  // @ts-ignore
  SumType,
  // @ts-ignore
  SumTypeVariant,
  // @ts-ignore
  TableCache,
  // @ts-ignore
  deepEqual,
} from '..';
// @ts-ignore
import { CallReducer as __CallReducer } from './call_reducer_type';
// @ts-ignore
import { Subscribe as __Subscribe } from './subscribe_type';
// @ts-ignore
import { OneOffQuery as __OneOffQuery } from './one_off_query_type';

// A namespace for generated variants and helper functions.
export namespace ClientMessage {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type CallReducer = { tag: 'CallReducer'; value: __CallReducer };
  export type Subscribe = { tag: 'Subscribe'; value: __Subscribe };
  export type OneOffQuery = { tag: 'OneOffQuery'; value: __OneOffQuery };

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const CallReducer = (value: __CallReducer): ClientMessage => ({
    tag: 'CallReducer',
    value,
  });
  export const Subscribe = (value: __Subscribe): ClientMessage => ({
    tag: 'Subscribe',
    value,
  });
  export const OneOffQuery = (value: __OneOffQuery): ClientMessage => ({
    tag: 'OneOffQuery',
    value,
  });

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant(
        'CallReducer',
        __CallReducer.getTypeScriptAlgebraicType()
      ),
      new SumTypeVariant('Subscribe', __Subscribe.getTypeScriptAlgebraicType()),
      new SumTypeVariant(
        'OneOffQuery',
        __OneOffQuery.getTypeScriptAlgebraicType()
      ),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: ClientMessage): void {
    ClientMessage.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): ClientMessage {
    return ClientMessage.getTypeScriptAlgebraicType().deserialize(reader);
  }
}

// The tagged union or sum type for the algebraic type `ClientMessage`.
export type ClientMessage =
  | ClientMessage.CallReducer
  | ClientMessage.Subscribe
  | ClientMessage.OneOffQuery;

export default ClientMessage;
